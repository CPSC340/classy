# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
      - image: circleci/mongo:3.6

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/project

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - run:
            command: cd packages/common && yarn install
            name: Preparing common

      - run:
            command: cd packages/portal/backend && mkdir -p ssl/ && yarn install
            name: Preparing backend

      - save_cache:
          paths:
            - node_modules
#            - packages/common/node_modules
#            - packages/portal-backend/node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

     # openssl aes-256-cbc -e -in ../.env -out .config -k $KEY
      - run:
            command: cd .circleci && openssl aes-256-cbc -d -in env.enc -out ../.env -k $ENVKEY
            name: Configuring .env

      - run:
            command: cd .circleci && openssl aes-256-cbc -d -in c1.enc -out ../packages/portal/backend/ssl/fullchain.pem -k $ENVKEY
            name: Configuring SSL-1

      - run:
            command: cd .circleci && openssl aes-256-cbc -d -in c2.enc -out ../packages/portal/backend/ssl/privkey.pem -k $ENVKEY
            name: Configuring SSL-2

      - run:
            command: cd packages/common && yarn tsc
            name: Building common

      - run:
            command: cd packages/portal/backend && yarn tsc
            name: Building backend

      - run:
            command: git config --global user.email "CI@test.com" && git config --global user.name "CI Test Name"
            name: Configure local git

      - run:
            command: |
                      set -e
                      cd packages/portal/backend
                      yarn coverCI
#            command: cd packages/portal-backend && yarn coverCI
            name: Running backend tests
            environment:
              MOCHA_FILE: packages/portal/backend/testOutput/test-results.xml
            when: always

      - run:
            command: cd packages/portal/backend && yarn coveralls
            name: Running backend coveralls
            when: always

      - run:
            command: cd packages/portal/backend && yarn codecov
            name: Running backend codecov
            when: always

      - store_test_results:
          path: packages/portal/backend/testOutput

      - store_artifacts:
          path: packages/portal/backend/testOutput

      - run:
            command: rm .env && rm packages/portal/backend/ssl/fullchain.pem && rm packages/portal/backend/ssl/privkey.pem
            name: Cleaning up
            when: always


# Before deploying, make sure you have done the following:
# - created a user `classy` on the host
# - installed SSL certificates for the host
# - created a `.env` file in the same dir as this file and populated appropriately
# - opened port 80 and port 443 (publicly)
#
# A few high-level notes about this config file:
# - At deploy-time, all services have access to the values in the .env file; however, they are only accessible to the
#   running service if the env_file directive is specified. If you only need to pass a subset of the env vars, use the
#   environment directive and list only the var keys you need.
# - As configured, only ports 80 and 443 are seen by the host; all other ports listed (with the expose directive) are
#   only accessible to linked services (i.e. those listed in the depends_on directive). If a service should be publicly
#   accessible, consider listing it in the proxy service instead of opening additional ports on the host.
# - In general, services should be started as non-root users. Here, we launch services as the classy user (configured on
#   the host) using the user directive.
# - Services specified here can be extended (and additional services can be added) by creating additional
#   docker-compose.yml files. See https://docs.docker.com/compose/extends/#example-use-case.

version: "3.5"

services:
    proxy:
        build:
            args:
                - UID
                - SSL_CERT_PATH
                - SSL_KEY_PATH
                - CONTAINER_NAME_PORTAL
                - BACKEND_PORT
            context: ./
            dockerfile: ./packages/proxy/Dockerfile
        container_name: ${CONTAINER_NAME_ROUTER}
        depends_on:
            - portal
        ports:
            - "80:8080"
            - "443:8443"
        restart: always
        user: "${UID}"
        volumes:
            - "${HOST_SSL_CERT_PATH}:${SSL_CERT_PATH}"
            - "${HOST_SSL_KEY_PATH}:${SSL_KEY_PATH}"
    portal:
        build:
            args:
                - GH_BOT_USERNAME
                - GH_BOT_EMAIL
            context: ./
            dockerfile: ./packages/portal/Dockerfile
        container_name: ${CONTAINER_NAME_PORTAL}
        depends_on:
            - db
        env_file: .env
        expose:
            - ${BACKEND_PORT}
        restart: always
        user: "${UID}"
        volumes:
            - "${HOST_SSL_CERT_PATH}:${SSL_CERT_PATH}"
            - "${HOST_SSL_KEY_PATH}:${SSL_KEY_PATH}"
    db:
        container_name: ${CONTAINER_NAME_DATABASE}
        environment:
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
        ports:
            - "27017:27017"
        image: mongo:3-jessie
        restart: always
        user: "${UID}"
        volumes:
            - /var/opt/classy/db:/data/db
